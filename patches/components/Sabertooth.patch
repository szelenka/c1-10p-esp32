diff -Nruw --strip-trailing-cr --exclude=.git build/Sabertooth/_org/Sabertooth/CMakeLists.txt build/Sabertooth/_new/Sabertooth/CMakeLists.txt
--- build/Sabertooth/_org/Sabertooth/CMakeLists.txt	1969-12-31 19:00:00
+++ build/Sabertooth/_new/Sabertooth/CMakeLists.txt	2024-11-20 13:35:23
@@ -0,0 +1,8 @@
+set(srcs "Sabertooth.cpp")
+
+set(requires 
+        "arduino")
+
+idf_component_register(SRCS "${srcs}" 
+                INCLUDE_DIRS "."
+                REQUIRES "${requires}")
diff -Nruw --strip-trailing-cr --exclude=.git build/Sabertooth/_org/Sabertooth/Sabertooth.cpp build/Sabertooth/_new/Sabertooth/Sabertooth.cpp
--- build/Sabertooth/_org/Sabertooth/Sabertooth.cpp	2024-11-20 13:31:03
+++ build/Sabertooth/_new/Sabertooth/Sabertooth.cpp	2024-11-20 13:35:13
@@ -17,41 +17,38 @@
 */
 
 #include "Sabertooth.h"
+#include <cstdlib>
 
-Sabertooth::Sabertooth(byte address)
-  : _address(address), _port(SabertoothTXPinSerial)
-{
-  
-}
-
 Sabertooth::Sabertooth(byte address, SabertoothStream& port)
-  : _address(address), _port(port)
+  : _address(address), _port(&port)
 {
 
 }
 
-void Sabertooth::autobaud(boolean dontWait) const
+void Sabertooth::autobaud(boolean dontWait /*= false*/) const
 {
-  autobaud(port(), dontWait);
+  if (_port != nullptr)
+    autobaud(*_port, dontWait);
 }
 
-void Sabertooth::autobaud(SabertoothStream& port, boolean dontWait)
+void Sabertooth::autobaud(SabertoothStream& port, boolean dontWait /*= false*/)
 {
   if (!dontWait) { delay(1500); }
   port.write(0xAA);
-#if defined(ARDUINO) && ARDUINO >= 100
   port.flush();
-#endif
   if (!dontWait) { delay(500); }
 }
 
 void Sabertooth::command(byte command, byte value) const
 {
-  port().write(address());
-  port().write(command);
-  port().write(value);
-  port().write((address() + command + value) & B01111111);
+  if (_port != nullptr)
+  {
+    port->write(address());
+    port->write(command);
+    port->write(value);
+    port->write((address() + command + value) & B01111111);
   }
+}
 
 void Sabertooth::throttleCommand(byte command, int power) const
 {
@@ -88,19 +85,17 @@
 
 void Sabertooth::setMinVoltage(byte value) const
 {
-  command(2, (byte)min(value, 120));
+  command(2, (byte)min((int)value, 120));
 }
 
 void Sabertooth::setMaxVoltage(byte value) const
 {
-  command(3, (byte)min(value, 127));
+  command(3, (byte)min((int)value, 127));
 }
 
 void Sabertooth::setBaudRate(long baudRate) const
 {
-#if defined(ARDUINO) && ARDUINO >= 100
-  port().flush();
-#endif
+  _port->flush();
 
   byte value;
   switch (baudRate)
@@ -113,9 +108,7 @@
   }
   command(15, value);
   
-#if defined(ARDUINO) && ARDUINO >= 100
-  port().flush();
-#endif
+  _port->flush();
   
   // (1) flush() does not seem to wait until transmission is complete.
   //     As a result, a Serial.end() directly after this appears to
@@ -128,12 +121,12 @@
 
 void Sabertooth::setDeadband(byte value) const
 {
-  command(17, (byte)min(value, 127));
+  command(17, (byte)min(int(value), 127));
 }
 
 void Sabertooth::setRamping(byte value) const
 {
-  command(16, (byte)constrain(value, 0, 80));
+  command(16, (byte)min(int(value), 0, 80));
 }
 
 void Sabertooth::setTimeout(int milliseconds) const
diff -Nruw --strip-trailing-cr --exclude=.git build/Sabertooth/_org/Sabertooth/Sabertooth.h build/Sabertooth/_new/Sabertooth/Sabertooth.h
--- build/Sabertooth/_org/Sabertooth/Sabertooth.h	2024-11-20 13:31:03
+++ build/Sabertooth/_new/Sabertooth/Sabertooth.h	2024-11-20 13:35:18
@@ -19,19 +19,10 @@
 #ifndef Sabertooth_h
 #define Sabertooth_h   
 
-#if defined(ARDUINO) && ARDUINO >= 100
 #include <Arduino.h>
 typedef Stream SabertoothStream;
-#else
-#include <WProgram.h>
-typedef Print SabertoothStream;
-#endif
 
-#if defined(USBCON)
-#define SabertoothTXPinSerial Serial1 // Arduino Leonardo has TX->1 on Serial1, not Serial.
-#else
 #define SabertoothTXPinSerial Serial
-#endif
 #define SyRenTXPinSerial SabertoothTXPinSerial
 
 /*!
@@ -43,13 +34,6 @@
 public:
   /*!
   Initializes a new instance of the Sabertooth class.
-  The driver address is set to the value given, and the Arduino TX serial port is used.
-  \param address The driver address.
-  */
-  Sabertooth(byte address);
-  
-  /*!
-  Initializes a new instance of the Sabertooth class.
   The driver address is set to the value given, and the specified serial port is used.
   \param address The driver address.
   \param port    The port to use.
@@ -64,12 +48,6 @@
   inline byte address() const { return _address; }
   
   /*!
-  Gets the serial port.
-  \return The serial port.
-  */
-  inline SabertoothStream& port() const { return _port; }
-
-  /*!
   Sends the autobaud character.
   \param dontWait If false, a delay is added to give the driver time to start up.
   */
@@ -172,8 +150,8 @@
   void throttleCommand(byte command, int power) const;
   
 private:
-  const byte        _address;
-  SabertoothStream& _port; 
+  byte              _address;
+  SabertoothStream* _port = nullptr; 
 };
 
 #endif
